## All API urls

Read the code (`lib/Play/Route/*.pm`) or try them in the browser for the resonse format. Hint: it's usually JSON.

GET /auth/twitter               # go to twitter, obtain login, set 'twitter_user' session and return to /#register
GET /api/user                   # get current user; 'registered=1' flag means the user is fully registered; otherwise json still can contain some info (e.g. twitter)
GET /api/user/{login}           # get another user
POST /api/register              # register the new user login, associate it with the current twitter user, save to db
GET /api/users                  # get the list of all users
GET /api/fakeuser/{login}       # temporary, fake analog of /register; dev mode only; 'notwitter' cgi param disables fake twitter account generation
POST /api/quest                 # add a new quest for current user
PUT /api/quest/{id}             # update quest
DELETE /api/quest/{id}          # delete quest (actually, set its status to "deleted"; it won't be shown in /api/quests, but will still be fetchable by its id)
GET /api/quests                 # get all quests
GET /api/quests?user={login}    # get all quests of a given user
GET /api/quests?status={status} # get all quests with a given status
GET /api/quest/{id}             # get one quest
GET /api/dev/session/{name}     # get session value
POST /api/comment/{quest_id}    # add new comment
GET /api/comment/{quest_id}     # get all quest comments

## Registration

This is how registration is implemented:
1. JS redirects to /auth/twitter
2. /auth/twitter redirects to twitter.com
3. twitter.com redirects back to /auth/twitter
4. /auth/twitter, now with the correct twitter login in user's session, redirects to /#register
5. JS checks whether the user has both twitter login and service login (using /api/user); if there's no service login, it shows the registration form
6. User enters his new service login in the registration form, JS calls /api/register, and now we're fully registered.

/api/user is the key for frontend to check the current authentification status.
